{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2","program":"/Users/bayramlcm/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","objekt","/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=f5a91924da9a73e2","-C","extra-filename=-f5a91924da9a73e2","--out-dir","/Users/bayramlcm/Documents/projects/blockchain/holochain/holome/cc_tuts/zomes/hello/code/target/rls/debug/deps","-L","dependency=/Users/bayramlcm/Documents/projects/blockchain/holochain/holome/cc_tuts/zomes/hello/code/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/bayramlcm/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/bayramlcm/Documents/projects/blockchain/holochain/holome/cc_tuts/zomes/hello/code/target/rls/debug/deps/libobjekt-f5a91924da9a73e2.rmeta"},"prelude":{"crate_id":{"name":"objekt","disambiguator":[9444695663430351731,14118158981468559702]},"crate_root":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src","external_crates":[{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12669636623235690034,8759211680751900309]}},{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5693088722327716739,2147858288623464010]}},{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15524063101320593432,10022011492683157993]}},{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14556973752653035032,10499433159243229334]}},{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[1934112228416746928,18062520869078565162]}},{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[18272308394612376465,2983342869845535113]}},{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7982440001281678496,5082264322901945876]}},{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17333179571007866912,15310387900280001912]}},{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[17767206385810259554,6284392829264960128]}},{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[6917085151040958166,7936695879549379973]}},{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[14883612992525439991,13188753928230923968]}},{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[8362867231865330830,11957228790523419708]}},{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13374155178358367403,7714447127929209529]}},{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7401024017757537210,13419518921059338139]}}],"span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":0,"byte_end":4296,"line_start":1,"line_end":170,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":0,"byte_end":4296,"line_start":1,"line_end":170,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":9},{"krate":0,"index":11},{"krate":0,"index":13}],"decl_id":null,"docs":" This crate provides a [`Clone`] trait that can be used in trait objects, and\n a [`clone_box`] function that can clone any sized or dynamically sized\n implementation of `Clone`. Types that implement the standard library's\n [`std::clone::Clone`] trait are automatically usable this way.\n \n [`Clone`]: trait.Clone.html\n [`clone_box`]: fn.clone_box.html\n [`std::clone::Clone`]: https://doc.rust-lang.org/std/clone/trait.Clone.html\n \n # Example\n \n ```edition2018\n trait MyTrait: objekt::Clone {\n     fn recite(&self);\n }\n \n impl MyTrait for String {\n     fn recite(&self) {\n         println!(\"{} â™«\", self);\n     }\n }\n \n fn main() {\n     let line = \"The slithy structs did gyre and gimble the namespace\";\n \n     // Build a trait object holding a String.\n     // This requires String to implement MyTrait and std::clone::Clone.\n     let x: Box<MyTrait> = Box::new(String::from(line));\n \n     x.recite();\n \n     // The type of x2 is a Box<MyTrait> cloned from x.\n     let x2 = objekt::clone_box(&*x);\n \n     x2.recite();\n }\n ```","sig":null,"attributes":[{"value":"! This crate provides a [`Clone`] trait that can be used in trait objects, and","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":0,"byte_end":80,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"! a [`clone_box`] function that can clone any sized or dynamically sized","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":81,"byte_end":155,"line_start":2,"line_end":2,"column_start":1,"column_end":75}},{"value":"! implementation of `Clone`. Types that implement the standard library's","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":156,"byte_end":230,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! [`std::clone::Clone`] trait are automatically usable this way.","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":231,"byte_end":297,"line_start":4,"line_end":4,"column_start":1,"column_end":67}},{"value":"! ","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":298,"byte_end":302,"line_start":5,"line_end":5,"column_start":1,"column_end":5}},{"value":"! [`Clone`]: trait.Clone.html","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":303,"byte_end":334,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"! [`clone_box`]: fn.clone_box.html","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":335,"byte_end":371,"line_start":7,"line_end":7,"column_start":1,"column_end":37}},{"value":"! [`std::clone::Clone`]: https://doc.rust-lang.org/std/clone/trait.Clone.html","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":372,"byte_end":451,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"! ","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":452,"byte_end":456,"line_start":9,"line_end":9,"column_start":1,"column_end":5}},{"value":"! # Example","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":457,"byte_end":470,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"! ","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":471,"byte_end":475,"line_start":11,"line_end":11,"column_start":1,"column_end":5}},{"value":"! ```edition2018","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":476,"byte_end":494,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"! trait MyTrait: objekt::Clone {","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":495,"byte_end":529,"line_start":13,"line_end":13,"column_start":1,"column_end":35}},{"value":"!     fn recite(&self);","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":530,"byte_end":555,"line_start":14,"line_end":14,"column_start":1,"column_end":26}},{"value":"! }","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":556,"byte_end":561,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"! ","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":562,"byte_end":566,"line_start":16,"line_end":16,"column_start":1,"column_end":5}},{"value":"! impl MyTrait for String {","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":567,"byte_end":596,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"!     fn recite(&self) {","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":597,"byte_end":623,"line_start":18,"line_end":18,"column_start":1,"column_end":27}},{"value":"!         println!(\"{} â™«\", self);","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":624,"byte_end":661,"line_start":19,"line_end":19,"column_start":1,"column_end":36}},{"value":"!     }","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":662,"byte_end":671,"line_start":20,"line_end":20,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":672,"byte_end":677,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"! ","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":678,"byte_end":682,"line_start":22,"line_end":22,"column_start":1,"column_end":5}},{"value":"! fn main() {","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":683,"byte_end":698,"line_start":23,"line_end":23,"column_start":1,"column_end":16}},{"value":"!     let line = \"The slithy structs did gyre and gimble the namespace\";","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":699,"byte_end":773,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"! ","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":774,"byte_end":778,"line_start":25,"line_end":25,"column_start":1,"column_end":5}},{"value":"!     // Build a trait object holding a String.","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":779,"byte_end":828,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"!     // This requires String to implement MyTrait and std::clone::Clone.","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":829,"byte_end":904,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"!     let x: Box<MyTrait> = Box::new(String::from(line));","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":905,"byte_end":964,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"! ","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":965,"byte_end":969,"line_start":29,"line_end":29,"column_start":1,"column_end":5}},{"value":"!     x.recite();","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":970,"byte_end":989,"line_start":30,"line_end":30,"column_start":1,"column_end":20}},{"value":"! ","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":990,"byte_end":994,"line_start":31,"line_end":31,"column_start":1,"column_end":5}},{"value":"!     // The type of x2 is a Box<MyTrait> cloned from x.","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":995,"byte_end":1053,"line_start":32,"line_end":32,"column_start":1,"column_end":59}},{"value":"!     let x2 = objekt::clone_box(&*x);","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":1054,"byte_end":1094,"line_start":33,"line_end":33,"column_start":1,"column_end":41}},{"value":"! ","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":1095,"byte_end":1099,"line_start":34,"line_end":34,"column_start":1,"column_end":5}},{"value":"!     x2.recite();","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":1100,"byte_end":1120,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"! }","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":1121,"byte_end":1126,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":1127,"byte_end":1134,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":1135,"byte_end":1138,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! This crate includes a macro for concisely implementing `impl","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":1139,"byte_end":1203,"line_start":39,"line_end":39,"column_start":1,"column_end":65}},{"value":"! std::clone::Clone for Box<MyTrait>` in terms of `objekt::clone_box`.","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":1204,"byte_end":1276,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":1277,"byte_end":1280,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! ```edition2018","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":1281,"byte_end":1299,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"! // As before.","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":1300,"byte_end":1317,"line_start":43,"line_end":43,"column_start":1,"column_end":18}},{"value":"! trait MyTrait: objekt::Clone {","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":1318,"byte_end":1352,"line_start":44,"line_end":44,"column_start":1,"column_end":35}},{"value":"!     /* ... */","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":1353,"byte_end":1370,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"! }","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":1371,"byte_end":1376,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":1377,"byte_end":1380,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! objekt::clone_trait_object!(MyTrait);","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":1381,"byte_end":1422,"line_start":48,"line_end":48,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":1423,"byte_end":1426,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"! // Now data structures containing Box<MyTrait> can derive Clone:","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":1427,"byte_end":1495,"line_start":50,"line_end":50,"column_start":1,"column_end":69}},{"value":"! #[derive(Clone)]","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":1496,"byte_end":1516,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"! struct Container {","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":1517,"byte_end":1539,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"!     trait_object: Box<MyTrait>,","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":1540,"byte_end":1575,"line_start":53,"line_end":53,"column_start":1,"column_end":36}},{"value":"! }","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":1576,"byte_end":1581,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":1582,"byte_end":1589,"line_start":55,"line_end":55,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":7},"span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":1898,"byte_end":1903,"line_start":68,"line_end":68,"column_start":11,"column_end":16},"name":"Clone","qualname":"::Clone","value":"Clone","parent":null,"children":[{"krate":0,"index":8}],"decl_id":null,"docs":" This trait is implemented by any type that implements [`std::clone::Clone`].","sig":null,"attributes":[{"value":"/ This trait is implemented by any type that implements [`std::clone::Clone`].","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":1723,"byte_end":1803,"line_start":65,"line_end":65,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":1804,"byte_end":1807,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ [`std::clone::Clone`]: https://doc.rust-lang.org/std/clone/trait.Clone.html","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":1808,"byte_end":1887,"line_start":67,"line_end":67,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":8},"span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":1961,"byte_end":1970,"line_start":71,"line_end":71,"column_start":15,"column_end":24},"name":"clone_box","qualname":"::Clone::clone_box","value":"fn (&self) -> *mut ()","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":9},"span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":2000,"byte_end":2005,"line_start":74,"line_end":74,"column_start":8,"column_end":13},"name":"clone","qualname":"::clone","value":"fn <T> (t: &T) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":11},"span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":2133,"byte_end":2142,"line_start":83,"line_end":83,"column_start":8,"column_end":17},"name":"clone_box","qualname":"::clone_box","value":"fn <T> (t: &T) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":2521,"byte_end":2522,"line_start":98,"line_end":98,"column_start":19,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/bayramlcm/.cargo/registry/src/github.com-1ecc6299db9ec823/objekt-0.1.2/src/lib.rs","byte_start":2521,"byte_end":2522,"line_start":98,"line_end":98,"column_start":19,"column_end":20},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":14},"to":{"krate":0,"index":7}}]}